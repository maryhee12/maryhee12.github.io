{"remainingRequest":"C:\\Users\\maryh\\Documents\\GitHub\\maryhee12.github.io\\vue_Todolist\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\maryh\\Documents\\GitHub\\maryhee12.github.io\\vue_Todolist\\src\\components\\ListAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\maryh\\Documents\\GitHub\\maryhee12.github.io\\vue_Todolist\\src\\components\\ListAdd.vue","mtime":1585898896000},{"path":"C:\\Users\\maryh\\Documents\\GitHub\\maryhee12.github.io\\vue_Todolist\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1584076644000},{"path":"C:\\Users\\maryh\\Documents\\GitHub\\maryhee12.github.io\\vue_Todolist\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\maryh\\Documents\\GitHub\\maryhee12.github.io\\vue_Todolist\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1584076644000},{"path":"C:\\Users\\maryh\\Documents\\GitHub\\maryhee12.github.io\\vue_Todolist\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { eventBus } from '../main' \r\nexport default {\r\n    data(){\r\n        return {\r\n            memo: null,\r\n            index: null,\r\n            mode: 'add'\r\n        }\r\n    },\r\n    created(){\r\n        eventBus.$on('listEdit', (memo, index) =>{\r\n            this.memo = memo\r\n            this.index = index\r\n            this.mode = 'edit'\r\n        })\r\n    },\r\n    methods : {\r\n        listAdd(){\r\n            if(this.memo === null) {\r\n                alert('할 일을 입력하지 않으셨습니다.')\r\n            } else {\r\n                this.$emit(\"listAdd\", this.memo)\r\n                this.memo = null;\r\n            }\r\n        },\r\n           enterKey(){\r\n              if(this.mode === 'add') { \r\n                if(this.memo == !Object) { // memo의 값이 공백이라면 alert 창을 띄워라.\r\n                    alert('할 일을 등록해 주세요.') \r\n                    this.memo = null  // enter 로 밑으로 내려가 있는 커서를 다시 올려준다.     \r\n                } else {\r\n                    this.listAdd() // 글자나 숫자 다른게 memo 에 입력되어있다면 listAdd를 실행시킨다.\r\n                }\r\n            } else { // mode === 'edit' 일때는 \r\n                this.listEdit()\r\n            }\r\n        \r\n        },\r\n        listEdit(){\r\n            if(this.memo === null) {\r\n                alert('할 일을 입력하지 않으셨습니다.')\r\n            } else {\r\n                this.$emit(\"listEdit\", this.memo, this.index, this.mode)\r\n                this.memo = null;\r\n                // this.mode = 'add'\r\n            }\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["ListAdd.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ListAdd.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n    <div>\r\n        <v-textarea\r\n        v-on:keyup.enter=\"enterKey\"\r\n        outline\r\n        v-model=\"memo\"\r\n        label=\"할 일을 입력해 주세요.\"\r\n        value=\"\"\r\n        ></v-textarea>\r\n        <v-btn \r\n        v-if=\"mode === 'add'\" \r\n        @click=\"listAdd\"\r\n        \r\n        >리스트 추가</v-btn>\r\n        <v-btn \r\n        v-else\r\n        @click=\"listEdit\">리스트 수정</v-btn>\r\n    </div>\r\n  \r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from '../main' \r\nexport default {\r\n    data(){\r\n        return {\r\n            memo: null,\r\n            index: null,\r\n            mode: 'add'\r\n        }\r\n    },\r\n    created(){\r\n        eventBus.$on('listEdit', (memo, index) =>{\r\n            this.memo = memo\r\n            this.index = index\r\n            this.mode = 'edit'\r\n        })\r\n    },\r\n    methods : {\r\n        listAdd(){\r\n            if(this.memo === null) {\r\n                alert('할 일을 입력하지 않으셨습니다.')\r\n            } else {\r\n                this.$emit(\"listAdd\", this.memo)\r\n                this.memo = null;\r\n            }\r\n        },\r\n           enterKey(){\r\n              if(this.mode === 'add') { \r\n                if(this.memo == !Object) { // memo의 값이 공백이라면 alert 창을 띄워라.\r\n                    alert('할 일을 등록해 주세요.') \r\n                    this.memo = null  // enter 로 밑으로 내려가 있는 커서를 다시 올려준다.     \r\n                } else {\r\n                    this.listAdd() // 글자나 숫자 다른게 memo 에 입력되어있다면 listAdd를 실행시킨다.\r\n                }\r\n            } else { // mode === 'edit' 일때는 \r\n                this.listEdit()\r\n            }\r\n        \r\n        },\r\n        listEdit(){\r\n            if(this.memo === null) {\r\n                alert('할 일을 입력하지 않으셨습니다.')\r\n            } else {\r\n                this.$emit(\"listEdit\", this.memo, this.index, this.mode)\r\n                this.memo = null;\r\n                // this.mode = 'add'\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n</style>"]}]}