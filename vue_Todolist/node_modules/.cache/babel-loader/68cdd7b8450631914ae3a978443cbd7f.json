{"remainingRequest":"E:\\스터디\\study\\todolist-Basic01_JH\\node_modules\\babel-loader\\lib\\index.js!E:\\스터디\\study\\todolist-Basic01_JH\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\스터디\\study\\todolist-Basic01_JH\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\스터디\\study\\todolist-Basic01_JH\\src\\components\\ListAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\스터디\\study\\todolist-Basic01_JH\\src\\components\\ListAdd.vue","mtime":1585898896000},{"path":"E:\\스터디\\study\\todolist-Basic01_JH\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1584076644000},{"path":"E:\\스터디\\study\\todolist-Basic01_JH\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\스터디\\study\\todolist-Basic01_JH\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1584076644000},{"path":"E:\\스터디\\study\\todolist-Basic01_JH\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { eventBus } from '../main';\nexport default {\n  data: function data() {\n    return {\n      memo: null,\n      index: null,\n      mode: 'add'\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    eventBus.$on('listEdit', function (memo, index) {\n      _this.memo = memo;\n      _this.index = index;\n      _this.mode = 'edit';\n    });\n  },\n  methods: {\n    listAdd: function listAdd() {\n      if (this.memo === null) {\n        alert('할 일을 입력하지 않으셨습니다.');\n      } else {\n        this.$emit(\"listAdd\", this.memo);\n        this.memo = null;\n      }\n    },\n    enterKey: function enterKey() {\n      if (this.mode === 'add') {\n        if (this.memo == !Object) {\n          // memo의 값이 공백이라면 alert 창을 띄워라.\n          alert('할 일을 등록해 주세요.');\n          this.memo = null; // enter 로 밑으로 내려가 있는 커서를 다시 올려준다.     \n        } else {\n          this.listAdd(); // 글자나 숫자 다른게 memo 에 입력되어있다면 listAdd를 실행시킨다.\n        }\n      } else {\n        // mode === 'edit' 일때는 \n        this.listEdit();\n      }\n    },\n    listEdit: function listEdit() {\n      if (this.memo === null) {\n        alert('할 일을 입력하지 않으셨습니다.');\n      } else {\n        this.$emit(\"listEdit\", this.memo, this.index, this.mode);\n        this.memo = null; // this.mode = 'add'\n      }\n    }\n  }\n};",{"version":3,"sources":["ListAdd.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA,SAAA,QAAA,QAAA,SAAA;AACA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,YAAA,IADA;AAEA,aAAA,IAFA;AAGA,YAAA;AAHA,KAAA;AAKA,GAPA;AAQA,SARA,qBAQA;AAAA;;AACA,aAAA,GAAA,CAAA,UAAA,EAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,YAAA,IAAA,GAAA,IAAA;AACA,YAAA,KAAA,GAAA,KAAA;AACA,YAAA,IAAA,GAAA,MAAA;AACA,KAJA;AAKA,GAdA;AAeA,WAAA;AACA,WADA,qBACA;AACA,UAAA,KAAA,IAAA,KAAA,IAAA,EAAA;AACA,cAAA,mBAAA;AACA,OAFA,MAEA;AACA,aAAA,KAAA,CAAA,SAAA,EAAA,KAAA,IAAA;AACA,aAAA,IAAA,GAAA,IAAA;AACA;AACA,KARA;AASA,YATA,sBASA;AACA,UAAA,KAAA,IAAA,KAAA,KAAA,EAAA;AACA,YAAA,KAAA,IAAA,IAAA,CAAA,MAAA,EAAA;AAAA;AACA,gBAAA,eAAA;AACA,eAAA,IAAA,GAAA,IAAA,CAFA,CAEA;AACA,SAHA,MAGA;AACA,eAAA,OAAA,GADA,CACA;AACA;AACA,OAPA,MAOA;AAAA;AACA,aAAA,QAAA;AACA;AAEA,KArBA;AAsBA,YAtBA,sBAsBA;AACA,UAAA,KAAA,IAAA,KAAA,IAAA,EAAA;AACA,cAAA,mBAAA;AACA,OAFA,MAEA;AACA,aAAA,KAAA,CAAA,UAAA,EAAA,KAAA,IAAA,EAAA,KAAA,KAAA,EAAA,KAAA,IAAA;AACA,aAAA,IAAA,GAAA,IAAA,CAFA,CAGA;AACA;AACA;AA9BA;AAfA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <v-textarea\r\n        v-on:keyup.enter=\"enterKey\"\r\n        outline\r\n        v-model=\"memo\"\r\n        label=\"할 일을 입력해 주세요.\"\r\n        value=\"\"\r\n        ></v-textarea>\r\n        <v-btn \r\n        v-if=\"mode === 'add'\" \r\n        @click=\"listAdd\"\r\n        \r\n        >리스트 추가</v-btn>\r\n        <v-btn \r\n        v-else\r\n        @click=\"listEdit\">리스트 수정</v-btn>\r\n    </div>\r\n  \r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from '../main' \r\nexport default {\r\n    data(){\r\n        return {\r\n            memo: null,\r\n            index: null,\r\n            mode: 'add'\r\n        }\r\n    },\r\n    created(){\r\n        eventBus.$on('listEdit', (memo, index) =>{\r\n            this.memo = memo\r\n            this.index = index\r\n            this.mode = 'edit'\r\n        })\r\n    },\r\n    methods : {\r\n        listAdd(){\r\n            if(this.memo === null) {\r\n                alert('할 일을 입력하지 않으셨습니다.')\r\n            } else {\r\n                this.$emit(\"listAdd\", this.memo)\r\n                this.memo = null;\r\n            }\r\n        },\r\n           enterKey(){\r\n              if(this.mode === 'add') { \r\n                if(this.memo == !Object) { // memo의 값이 공백이라면 alert 창을 띄워라.\r\n                    alert('할 일을 등록해 주세요.') \r\n                    this.memo = null  // enter 로 밑으로 내려가 있는 커서를 다시 올려준다.     \r\n                } else {\r\n                    this.listAdd() // 글자나 숫자 다른게 memo 에 입력되어있다면 listAdd를 실행시킨다.\r\n                }\r\n            } else { // mode === 'edit' 일때는 \r\n                this.listEdit()\r\n            }\r\n        \r\n        },\r\n        listEdit(){\r\n            if(this.memo === null) {\r\n                alert('할 일을 입력하지 않으셨습니다.')\r\n            } else {\r\n                this.$emit(\"listEdit\", this.memo, this.index, this.mode)\r\n                this.memo = null;\r\n                // this.mode = 'add'\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n</style>"],"sourceRoot":"src\\components"}]}